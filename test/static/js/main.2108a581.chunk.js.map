{"version":3,"sources":["utils.js","userMediaUtils.js","App.js","reportWebVitals.js","index.js"],"names":["sendNotification","message","options","type","duration","undefined","detail","document","dispatchEvent","CustomEvent","getConstraints","memoizeOne","audioInput","videoInput","constraints","audio","echoCancellation","autoGainControl","noiseSuppression","video","width","height","deviceId","getStream","a","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","mediaDevices","stream","console","log","name","mapDevice","d","label","kind","groupId","getAvailableDevices","audioInputDevices","audioOutputDevices","videoDevices","deviceErrors","enumerateDevices","forEach","push","length","checkCameraMicPermission","permissions","Promise","all","query","cameraPermission","micPermission","state","error","getDefaultDevice","devices","filter","find","App","props","videoRef","React","createRef","this","current","src","srcObject","className","muted","ref","id","autoPlay","PureComponent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"yRAAO,SAASA,EAAiBC,GAAwB,IAAfC,EAAc,uDAAJ,GAE5CC,EAAmBD,EAAnBC,KAAMC,EAAaF,EAAbE,cACCC,IAATF,IACFA,EAAO,gBAEQE,IAAbD,IACFA,EAAW,KAEb,IAAME,EAAS,CACbL,UACAC,QAAS,CACPC,OACAC,aAGJG,SAASC,cAAc,IAAIC,YAAY,2BAA4B,CAAEH,YCbhE,IAAMI,EAAiBC,aAAW,WAA2C,IAA1CC,EAAyC,uDAA5B,KAAMC,EAAsB,uDAAT,KAClEC,EAAc,CAClBC,MAAO,CACLC,kBAAkB,EAClBC,iBAAiB,EACjBC,kBAAkB,GAEpBC,MAAO,CACLC,MAAO,IACPC,OAAQ,MAgBZ,OAZI,OAACT,QAAD,IAACA,OAAD,EAACA,EAAYU,UAGfR,EAAYC,MAAMO,SAAWV,EAAWU,SAFxCR,EAAYC,OAAQ,GAKlB,OAACF,QAAD,IAACA,OAAD,EAACA,EAAYS,UAGfR,EAAYK,MAAMG,SAAWT,EAAWS,SAFxCR,EAAYK,OAAQ,GAKI,IAAtBL,EAAYK,QAAyC,IAAtBL,EAAYC,MACtC,KAEFD,KAGF,SAAeS,EAAtB,kC,4CAAO,WAAyBT,GAAzB,iBAAAU,EAAA,kEAEHC,UAAUC,aACRD,UAAUC,cACVD,UAAUE,oBACVF,UAAUG,iBACVH,UAAUI,gBACRJ,UAAUC,eAAgBD,UAAUK,aAAaJ,aAPlD,iCAQqBD,UAAUK,aAAaJ,aAR5C,uCASGD,UAAUK,aAAaJ,aAAaZ,GATvC,wCAUSW,UAAUC,aAAaZ,GAVhC,mCAQKiB,EARL,uBAWMA,GAXN,0DAcHC,QAAQC,IAAI,QAAZ,MAdG,KAgBK,KAAEC,KAhBP,OAiBI,kBAjBJ,MAkBI,yBAlBJ,QAqBI,2BArBJ,gCAmBCjC,EAAU,kCAnBX,oCAsBCA,EAAU,sBAtBX,oCAyBCA,EAAU,qBAzBX,6BA4BHD,EAAiBC,EAAS,CAAEE,KAAM,UA5B/B,iCA8BE,MA9BF,2D,sBA8CP,SAASgC,EAAUC,GACjB,MAAO,CACLd,SAAQ,OAAEc,QAAF,IAAEA,OAAF,EAAEA,EAAGd,SACbe,MAAK,OAAED,QAAF,IAAEA,OAAF,EAAEA,EAAGC,MACVC,KAAI,OAAEF,QAAF,IAAEA,OAAF,EAAEA,EAAGE,KACTC,QAAO,OAAEH,QAAF,IAAEA,OAAF,EAAEA,EAAGG,SAIT,SAAeC,IAAtB,+B,4CAAO,kCAAAhB,EAAA,6DACLQ,QAAQC,IAAI,uBACNQ,EAAoB,GACpBC,EAAqB,GACrBC,EAAe,GACfC,EAAe,GALhB,kBAOmBnB,UAAUK,aAAae,mBAP1C,cAQKC,SAAQ,SAACV,IACX,OAACA,QAAD,IAACA,OAAD,EAACA,EAAGd,YAAY,OAACc,QAAD,IAACA,OAAD,EAACA,EAAGC,SAGT,eAAXD,EAAEE,KACJG,EAAkBM,KAAKZ,EAAUC,IACb,gBAAXA,EAAEE,KACXI,EAAmBK,KAAKZ,EAAUC,IACd,eAAXA,EAAEE,MACXK,EAAaI,KAAKZ,EAAUC,QAGC,IAA7BK,EAAkBO,QACpBJ,EAAaG,KAAK,SAEQ,IAAxBJ,EAAaK,QACfJ,EAAaG,KAAK,SAEc,IAA9BL,EAAmBM,QACrBN,EAAmBK,KAAK,CACtBT,KAAM,cACNhB,SAAU,UACVe,MAAO,oBA9BR,kDAkCHrC,EAAiB,KAAEC,QAAS,CAAEE,KAAM,UAlCjC,eAoCLsC,EAAkBM,KAAK,CACrBT,KAAM,aACNhB,SAAU,KACVe,MAAO,mBAETK,EAAmBK,KAAK,CACtBT,KAAM,cACNhB,SAAU,KACVe,MAAO,gBAETM,EAAaI,KAAK,CAChBT,KAAM,aACNhB,SAAU,KACVe,MAAO,eAjDJ,kBAmDE,CAAEI,oBAAmBC,qBAAoBC,eAAcC,iBAnDzD,2D,sBAsDA,SAAeK,IAAtB,+B,4CAAO,sCAAAzB,EAAA,kEAEEC,UAAUyB,YAFZ,gCAG8BV,IAH9B,uBAGOI,EAHP,EAGOA,aACRZ,QAAQC,IAAI,eAAgBW,GAJ3B,kBAK8B,IAAxBA,EAAaI,QALnB,wBAO6CG,QAAQC,IAAI,CAC1D3B,UAAUyB,YAAYG,MAAM,CAAEnB,KAAM,WACpCT,UAAUyB,YAAYG,MAAM,CAAEnB,KAAM,iBATnC,2CAOIoB,EAPJ,KAOsBC,EAPtB,uBAWgC,aAAZ,OAAhBD,QAAgB,IAAhBA,OAAA,EAAAA,EAAkBE,QAAgD,aAAZ,OAAbD,QAAa,IAAbA,OAAA,EAAAA,EAAeC,QAX5D,yCAaHxB,QAAQyB,MAAM,KAAExD,SAbb,mBAcI,GAdJ,2D,sBA8BA,SAAeyD,EAAtB,kC,4CAAO,WAAgCvD,GAAhC,uBAAAqB,EAAA,6DACLQ,QAAQC,IAAI,oBADP,SAGiBR,UAAUK,aAAae,mBAHxC,UAGCc,EAHD,OAIQ,UAATxD,EAJC,oBAM8B,KAD3BsC,EAAoBkB,EAAQC,QAAO,SAACxB,GAAD,MAAkB,eAAXA,EAAEE,SAC5BU,OANnB,yCAOM,MAPN,mBAUgB3C,KADfO,EAAa6B,EAAkBoB,MAAK,SAACzB,GAAD,MAAsB,YAAfA,EAAEd,eAE/CV,EAAa6B,EAAkB,IAX9B,kBAaIN,EAAUvB,IAbd,WAeQ,UAATT,EAfC,oBAiByB,KADtBwC,EAAegB,EAAQC,QAAO,SAACxB,GAAD,MAAkB,eAAXA,EAAEE,SAC5BU,OAjBd,0CAkBM,MAlBN,oBAqBgB3C,KADfQ,EAAa8B,EAAakB,MAAK,SAACzB,GAAD,MAAsB,YAAfA,EAAEd,eAE1CT,EAAa8B,EAAa,IAtBzB,kBAwBIR,EAAUtB,IAxBd,iCA0BE,MA1BF,6C,uCCnIQiD,E,kDArCb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,SAAWC,IAAMC,YAFL,E,4FAKnB,gCAAA1C,EAAA,sEACmByB,IADnB,mDAG6BS,EAAiB,SAH9C,UAGU7C,EAHV,OAIImB,QAAQC,IAAI,aAAcpB,KACpBC,EAAcJ,EAAe,KAAMG,IAL7C,kCAO2BU,EAAUT,GAPrC,QAOYiB,EAPZ,OAQMoC,KAAKH,SAASI,QAAQC,IAAM,GAC5BF,KAAKH,SAASI,QAAQE,UAAYvC,EATxC,iD,wFAeA,WACEC,QAAQC,IAAI,0CACRkC,KAAKH,SAASI,UAChBD,KAAKH,SAASI,QAAQC,IAAM,GAC5BF,KAAKH,SAASI,QAAQE,UAAY,Q,oBAItC,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,uBAAOC,OAAK,EAACC,IAAKN,KAAKH,SAAUU,GAAG,QAAQC,UAAQ,U,GAhC1CC,iBCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFjF,SAASkF,eAAe,SAM1BZ,M","file":"static/js/main.2108a581.chunk.js","sourcesContent":["export function sendNotification(message, options = {}) {\n  // return { type: types.SEND_NOTIFICATION, data: notification };\n  let { type, duration } = options;\n  if (type === undefined) {\n    type = 'success';\n  }\n  if (duration === undefined) {\n    duration = 4000;\n  }\n  const detail = {\n    message,\n    options: {\n      type,\n      duration,\n    },\n  };\n  document.dispatchEvent(new CustomEvent('ADD_NOTIFICATION_MESSAGE', { detail }));\n}\n","import memoizeOne from 'memoize-one';\nimport { sendNotification } from './utils';\n\nexport const getConstraints = memoizeOne((audioInput = null, videoInput = null) => {\n  const constraints = {\n    audio: {\n      echoCancellation: true,\n      autoGainControl: true,\n      noiseSuppression: true,\n    },\n    video: {\n      width: 440,\n      height: 250,\n    },\n  };\n\n  if (!audioInput?.deviceId) {\n    constraints.audio = false;\n  } else {\n    constraints.audio.deviceId = audioInput.deviceId;\n  }\n\n  if (!videoInput?.deviceId) {\n    constraints.video = false;\n  } else {\n    constraints.video.deviceId = videoInput.deviceId;\n  }\n\n  if (constraints.video === false && constraints.audio === false) {\n    return null;\n  }\n  return constraints;\n});\n\nexport async function getStream(constraints) {\n  try {\n    navigator.getUserMedia =\n      navigator.getUserMedia ||\n      navigator.webkitGetUserMedia ||\n      navigator.mozGetUserMedia ||\n      navigator.msGetUserMedia;\n    if (navigator.getUserMedia || navigator.mediaDevices.getUserMedia) {\n      const stream = (await navigator.mediaDevices.getUserMedia)\n        ? navigator.mediaDevices.getUserMedia(constraints)\n        : await navigator.getUserMedia(constraints);\n      return stream;\n    }\n  } catch (e) {\n    console.log('ERROR', e);\n    let message;\n    switch (e.name) {\n      case 'NotFoundError':\n      case 'DevicesNotFoundError':\n        message = 'Please setup your webcam first.';\n        break;\n      case 'SourceUnavailableError':\n        message = 'Your webcam is busy';\n        break;\n      default:\n        message = 'Permission denied!';\n        break;\n    }\n    sendNotification(message, { type: 'error' });\n  }\n  return null;\n}\n\nexport async function getUserMedia(constraints) {\n  try {\n    const stream = await getStream(constraints);\n    if (stream) {\n      stream.getTracks().forEach((track) => {\n        track.stop();\n      });\n    }\n  } catch (e) {\n    console.error('ERROR', e.message);\n  }\n}\n\nfunction mapDevice(d) {\n  return {\n    deviceId: d?.deviceId,\n    label: d?.label,\n    kind: d?.kind,\n    groupId: d?.groupId,\n  };\n}\n\nexport async function getAvailableDevices() {\n  console.log('getAvailableDevices');\n  const audioInputDevices = [];\n  const audioOutputDevices = [];\n  const videoDevices = [];\n  const deviceErrors = [];\n  try {\n    const devices = await navigator.mediaDevices.enumerateDevices();\n    devices.forEach((d) => {\n      if (!d?.deviceId || !d?.label) {\n        return;\n      }\n      if (d.kind === 'audioinput') {\n        audioInputDevices.push(mapDevice(d));\n      } else if (d.kind === 'audiooutput') {\n        audioOutputDevices.push(mapDevice(d));\n      } else if (d.kind === 'videoinput') {\n        videoDevices.push(mapDevice(d));\n      }\n    });\n    if (audioInputDevices.length === 0) {\n      deviceErrors.push('audio');\n    }\n    if (videoDevices.length === 0) {\n      deviceErrors.push('video');\n    }\n    if (audioOutputDevices.length === 0) {\n      audioOutputDevices.push({\n        kind: 'audiooutput',\n        deviceId: 'default',\n        label: 'Default speaker',\n      });\n    }\n  } catch (e) {\n    sendNotification(e.message, { type: 'error' });\n  }\n  audioInputDevices.push({\n    kind: 'audioinput',\n    deviceId: null,\n    label: 'Microphone off',\n  });\n  audioOutputDevices.push({\n    kind: 'audiooutput',\n    deviceId: null,\n    label: 'Speaker off',\n  });\n  videoDevices.push({\n    kind: 'videoinput',\n    deviceId: null,\n    label: 'Camera off',\n  });\n  return { audioInputDevices, audioOutputDevices, videoDevices, deviceErrors };\n}\n\nexport async function checkCameraMicPermission() {\n  try {\n    if (!navigator.permissions) {\n      const { deviceErrors } = await getAvailableDevices();\n      console.log('deviceErrors', deviceErrors);\n      return deviceErrors.length === 0;\n    }\n    const [cameraPermission, micPermission] = await Promise.all([\n      navigator.permissions.query({ name: 'camera' }),\n      navigator.permissions.query({ name: 'microphone' }),\n    ]);\n    return cameraPermission?.state === 'granted' && micPermission?.state === 'granted';\n  } catch (e) {\n    console.error(e.message);\n    return false;\n  }\n}\n\nexport async function requestCameraMicPermissions() {\n  let granted = await checkCameraMicPermission();\n  if (!granted) {\n    await getUserMedia({\n      audio: true,\n      video: true,\n    });\n    granted = await checkCameraMicPermission();\n  }\n  return granted;\n}\n\nexport async function getDefaultDevice(type) {\n  console.log('getDefaultDevice');\n  // await getUserMedia(getConstraints());\n  const devices = await navigator.mediaDevices.enumerateDevices();\n  if (type === 'audio') {\n    const audioInputDevices = devices.filter((d) => d.kind === 'audioinput');\n    if (audioInputDevices.length === 0) {\n      return null;\n    }\n    let audioInput = audioInputDevices.find((d) => d.deviceId === 'default');\n    if (audioInput === undefined) {\n      audioInput = audioInputDevices[0];\n    }\n    return mapDevice(audioInput);\n  }\n  if (type === 'video') {\n    const videoDevices = devices.filter((d) => d.kind === 'videoinput');\n    if (videoDevices.length === 0) {\n      return null;\n    }\n    let videoInput = videoDevices.find((d) => d.deviceId === 'default');\n    if (videoInput === undefined) {\n      videoInput = videoDevices[0];\n    }\n    return mapDevice(videoInput);\n  }\n  return null;\n}\n","import React, { PureComponent } from 'react';\nimport { checkCameraMicPermission, getConstraints, getStream, getDefaultDevice } from './userMediaUtils';\nimport './App.css';\n\nclass App extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.videoRef = React.createRef();\n  }\n\n  async componentDidMount() {\n    const rs = await checkCameraMicPermission();\n    if (rs) {\n      const videoInput = await getDefaultDevice('video');\n      console.log('videoInput', videoInput);\n      const constraints = getConstraints(null, videoInput);\n      if (constraints) {\n        const stream = await getStream(constraints);\n        this.videoRef.current.src = '';\n        this.videoRef.current.srcObject = stream;\n      }\n    }\n\n  }\n\n  componentWillUnmount() {\n    console.log('componentWillUnmount JoinMeetingDialog');\n    if (this.videoRef.current) {\n      this.videoRef.current.src = '';\n      this.videoRef.current.srcObject = null;\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <video muted ref={this.videoRef} id=\"video\" autoPlay></video>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}